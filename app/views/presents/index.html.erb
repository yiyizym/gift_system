<table class="table table-striped table-hover presents-table ms-controller" ms-controller="presents">
	<thead>
		<tr>
			<th>赠送日期</th>
			<th>持有人</th>
			<th>受赠人</th>
			<th>赠言</th>
			<th>赠送数量</th>
			<th>操作</th>
		</tr>
	</thead>
	<tbody >
		<tr class="present-item" ms-repeat="presentsList" data-repeat-rendered="initializeDatePicker">
			<td>
				<span ms-visible="editShow !== $index && el.id">{{el.transfer_date}}</span>
				<input type="text" ms-visible="editShow === $index || !el.id" ms-duplex="el.transfer_date" class="datepicker" placeholder="选择日期">
			</td>
			<td>
				<span ms-visible="editShow !== $index && el.id">{{el.from_employee_name}}</span>
				<select ms-visible="editShow === $index || !el.id" ms-change="setFromEmployeeName($event, el)" ms-duplex="el.from_employee_no">
					<option ms-repeat-employee="employeesList" ms-attr-value="employee.no">
						{{employee.name}}
					</option>
				</select>
			</td>
			<td>
				<span ms-visible="editShow !== $index && el.id">{{el.to_employee_name}}</span>
				<select ms-visible="editShow === $index || !el.id" ms-change="setToEmployeeName($event, el)" ms-duplex="el.to_employee_no">
					<option ms-repeat-employee="employeesList" ms-attr-value="employee.no">
						{{employee.name}}
					</option>
				</select>
			</td>
			<td>
				<span ms-visible="editShow !== $index && el.id">{{el.description}}</span>
				<input type="text" ms-visible="editShow === $index || !el.id" ms-duplex="el.description">
			</td>
			<td>
				<span ms-visible="editShow !== $index && el.id">{{el.coin_num}}</span>
				<input type="text" ms-visible="editShow === $index || !el.id" ms-duplex="el.coin_num">
			</td>
			<td>
				<button type="button" class="btn btn-default" ms-visible="editShow !== $index && el.id" ms-click="toggleEdit($index)">{{ '编辑' }}</button>
				<button type="button" class="btn btn-default" ms-visible="editShow === $index && el.id" ms-click="submitEdit(el),toggleEdit('')">{{ '确定' }}</button>
				<button type="button" class="btn btn-default" ms-visible="!el.id" ms-click="submitNew(el),toggleEdit('')">{{ '确定' }}</button>
				<button type="button" class="btn btn-default" ms-click="deletePresent(el)">{{ '删除' }}</button>
			</td>
		</tr>
	</tbody>
	<tfoot>
		<tr>
			<td colspan="5">
				<button type="button" class="btn btn-primary add-present" ms-click="newPresent">添加赠送记录</button>
				
			</td>
		</tr>
	</tfoot>
</table>




<% content_for :page_javascript do %>
<script>
	$(function(){
			var MAP = {
				'update' : 'PATCH',
				'new' : 'POST',
				'delete' : 'DELETE'
			};

			var submit = function(item,type){
				$.ajax({
					url: type === 'new' ? "/presents" : "/presents/" + item.id,
					data: item.$model,
					type: MAP[type],
					success: function(resp){
						$.ajax({
							url: "/presents",
							type: "GET",
							dataType: "json",
							success: function(resp){
								model.presentsList = resp.presents;
							}
						});

					},
					complete: function(resp){
					}
				});
			};

			var presentsList =  <%= @presents.to_json.html_safe %>;

			var employeesList = <%= @employees.to_json.html_safe %>;

			var model = window.model = avalon.define({
				$id : "presents",
				presentsList : presentsList,
				employeesList : employeesList,
				editShow : '',
				changedEmployee : {no:'',name:''},
				toggleEdit : function(index){
					model.editShow = index;
				},
				newPresent: function(){
					model.presentsList.push({
						transfer_date: '',
						from_employee_no: '',
						from_employee_name: '',
						to_employee_no: '',
						to_employee_name: '',
						description: '',
						coin_num: '0'
					});
				},
				deletePresent: function(el){
					if (el.id) {
						model.submitDelete(el);
					} else{
						model.presentsList.pop();
					}
				},
				submitEdit: function(el){
					submit(el, 'update');
				},
				submitNew: function(el){
					submit(el, 'new');
				},
				submitDelete: function(el){
					submit(el, 'delete');
				},
				setFromEmployeeName: function($event,el){
					var no = +$event.target.value;
					var name = _.findWhere(employeesList, {no: no}).name;
					el.from_employee_name = name;
				},
				setToEmployeeName: function($event,el){
					var no = +$event.target.value;
					var name = _.findWhere(employeesList, {no: no}).name;
					el.to_employee_name = name;
				},

				initializeDatePicker: function(action,offset, length){
					var me = this;
					if (action == 'add') {
						console.log(">>>> to initialize datepicker");
						$(me).find('tr').eq(offset).find('.datepicker').datepicker({
							format: 'yyyy-mm-dd',
							autoclose: true,
							language: 'zh-CN',
							orientation: 'top left'

						}).on('changeDate', function(e){
							console.log('>>> dateChange.');
						});
							
					}
				}

			});


			
});
</script>
<% end %>